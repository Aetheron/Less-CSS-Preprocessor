<?php
// $Id$

/**
 * Builds the less cache
 */
function less_css_alter(&$css) {
  
  $base_path = $_SERVER['DOCUMENT_ROOT'] . base_path();
  $file_path = file_default_scheme() . ':/';
  
  $files_keys = array_keys($css);
  $files_values = array_values($css);
  foreach ($files_keys as $key => $input_file) {
    
    if (substr($input_file, -5) == '.less') {
      
      $css_path = $file_path .'/less/'. dirname($input_file);
      
      if (!is_dir($css_path)) {
        drupal_mkdir($css_path, 0775, TRUE);
      }
      
      $output_file = $css_path .'/'. basename($input_file, '.less') .'.css';
      
      if (!file_exists($base_path . $output_file) || filemtime($base_path . $input_file) > filemtime($base_path . $output_file)) {
        
        require_once('lessphp/lessc.inc.php');
        
        $less = new lessc();
        
        $contents = drupal_load_stylesheet($input_file, false);
        
        $base = base_path() . dirname($input_file) .'/';
        _drupal_build_css_path(NULL, $base);
        // Prefix all paths within this CSS file, ignoring external and absolute paths.
        $data = preg_replace_callback('/url\([\'"]?(?![a-z]+:|\/+)([^\'")]+)[\'"]?\)/i', '_drupal_build_css_path', $contents);

        file_save_data($less->parse($data), $output_file, FILE_EXISTS_REPLACE);
        
      }
      
      if (file_exists($output_file)) {
        array_splice($files_keys, $key, 1, $output_file);
        $files_values[$key]['data'] = $output_file;
      }
      
    }
    
  }
  
  $css = array_combine($files_keys, $files_values);
}
